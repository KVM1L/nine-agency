(() => { "use strict"; const e = {}; let t = !0, a = (e = 500) => { if (t) { const a = document.querySelectorAll("[data-lp]"); setTimeout((() => { a.forEach((e => { e.style.paddingRight = "" })), document.body.style.paddingRight = "", document.documentElement.classList.remove("lock") }), e), t = !1, setTimeout((function () { t = !0 }), e) } }, o = (e = 500) => { if (t) { const a = document.querySelectorAll("[data-lp]"), o = window.innerWidth - document.body.offsetWidth + "px"; a.forEach((e => { e.style.paddingRight = o })), document.body.style.paddingRight = o, document.documentElement.classList.add("lock"), t = !1, setTimeout((function () { t = !0 }), e) } }; function s(e) { setTimeout((() => { window.FLS && console.log(e) }), 0) } let r = (e, t = !1, o = 500, r = 0) => { const n = document.querySelector(e); if (n) { let i = "", l = 0; if (t) { i = "header.header"; const e = document.querySelector(i); e.classList.contains("_header-scroll") ? l = e.offsetHeight : (e.style.cssText = "transition-duration: 0s;", e.classList.add("_header-scroll"), l = e.offsetHeight, e.classList.remove("_header-scroll"), setTimeout((() => { e.style.cssText = "" }), 0)) } let c = { speedAsDuration: !0, speed: o, header: i, offset: r, easing: "easeOutQuad" }; if (document.documentElement.classList.contains("menu-open") && (a(), document.documentElement.classList.remove("menu-open")), "undefined" != typeof SmoothScroll) (new SmoothScroll).animateScroll(n, "", c); else { let e = n.getBoundingClientRect().top + scrollY; e = l ? e - l : e, e = r ? e - r : e, window.scrollTo({ top: e, behavior: "smooth" }) } s(`[gotoBlock]: Юхуу...їдемо до ${e}`) } else s(`[gotoBlock]: Йой... Такого блоку немає на сторінці: ${e}`) }; let n = { getErrors(e) { let t = 0, a = e.querySelectorAll("*[data-required]"); return a.length && a.forEach((e => { null === e.offsetParent && "SELECT" !== e.tagName || e.disabled || (t += this.validateInput(e)) })), t }, validateInput(e) { let t = 0; return "email" === e.dataset.required ? (e.value = e.value.replace(" ", ""), this.emailTest(e) ? (this.addError(e), t++) : this.removeError(e)) : ("checkbox" !== e.type || e.checked) && e.value.trim() ? this.removeError(e) : (this.addError(e), t++), t }, addError(e) { e.classList.add("_form-error"), e.parentElement.classList.add("_form-error"); let t = e.parentElement.querySelector(".form__error"); t && e.parentElement.removeChild(t), e.dataset.error && e.parentElement.insertAdjacentHTML("beforeend", `<div class="form__error">${e.dataset.error}</div>`) }, removeError(e) { e.classList.remove("_form-error"), e.parentElement.classList.remove("_form-error"), e.parentElement.querySelector(".form__error") && e.parentElement.removeChild(e.parentElement.querySelector(".form__error")) }, formClean(t) { t.reset(), setTimeout((() => { let a = t.querySelectorAll("input,textarea"); for (let e = 0; e < a.length; e++){ const t = a[e]; t.parentElement.classList.remove("_form-focus"), t.classList.remove("_form-focus"), n.removeError(t) } let o = t.querySelectorAll(".checkbox__input"); if (o.length > 0) for (let e = 0; e < o.length; e++){ o[e].checked = !1 } if (e.select) { let a = t.querySelectorAll("div.select"); if (a.length) for (let t = 0; t < a.length; t++){ const o = a[t].querySelector("select"); e.select.selectBuild(o) } } }), 0) }, emailTest: e => !/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,8})+$/.test(e.value) }; let i = !1; setTimeout((() => { if (i) { let e = new Event("windowScroll"); window.addEventListener("scroll", (function (t) { document.dispatchEvent(e) })) } }), 0); new class { constructor(e) { this.type = e } init() { this.оbjects = [], this.daClassname = "_dynamic_adapt_", this.nodes = [...document.querySelectorAll("[data-da]")], this.nodes.forEach((e => { const t = e.dataset.da.trim().split(","), a = {}; a.element = e, a.parent = e.parentNode, a.destination = document.querySelector(`${t[0].trim()}`), a.breakpoint = t[1] ? t[1].trim() : "767", a.place = t[2] ? t[2].trim() : "last", a.index = this.indexInParent(a.parent, a.element), this.оbjects.push(a) })), this.arraySort(this.оbjects), this.mediaQueries = this.оbjects.map((({ breakpoint: e }) => `(${this.type}-width: ${e}px),${e}`)).filter(((e, t, a) => a.indexOf(e) === t)), this.mediaQueries.forEach((e => { const t = e.split(","), a = window.matchMedia(t[0]), o = t[1], s = this.оbjects.filter((({ breakpoint: e }) => e === o)); a.addEventListener("change", (() => { this.mediaHandler(a, s) })), this.mediaHandler(a, s) })) } mediaHandler(e, t) { e.matches ? t.forEach((e => { this.moveTo(e.place, e.element, e.destination) })) : t.forEach((({ parent: e, element: t, index: a }) => { t.classList.contains(this.daClassname) && this.moveBack(e, t, a) })) } moveTo(e, t, a) { t.classList.add(this.daClassname), "last" === e || e >= a.children.length ? a.append(t) : "first" !== e ? a.children[e].before(t) : a.prepend(t) } moveBack(e, t, a) { t.classList.remove(this.daClassname), void 0 !== e.children[a] ? e.children[a].before(t) : e.append(t) } indexInParent(e, t) { return [...e.children].indexOf(t) } arraySort(e) { "min" === this.type ? e.sort(((e, t) => e.breakpoint === t.breakpoint ? e.place === t.place ? 0 : "first" === e.place || "last" === t.place ? -1 : "last" === e.place || "first" === t.place ? 1 : 0 : e.breakpoint - t.breakpoint)) : e.sort(((e, t) => e.breakpoint === t.breakpoint ? e.place === t.place ? 0 : "first" === e.place || "last" === t.place ? 1 : "last" === e.place || "first" === t.place ? -1 : 0 : t.breakpoint - e.breakpoint)) } }("max").init(), window.FLS = !0, document.querySelector(".icon-menu") && document.addEventListener("click", (function (e) { t && e.target.closest(".icon-menu") && (((e = 500) => { document.documentElement.classList.contains("lock") ? a(e) : o(e) })(), document.documentElement.classList.toggle("menu-open")) })), function (e = { viewPass: !1, autoHeight: !1 }) { if (document.body.addEventListener("focusin", (function (e) { const t = e.target; "INPUT" !== t.tagName && "TEXTAREA" !== t.tagName || (t.hasAttribute("data-no-focus-classes") || (t.classList.add("_form-focus"), t.parentElement.classList.add("_form-focus")), n.removeError(t), t.hasAttribute("data-validate") && n.removeError(t)) })), document.body.addEventListener("focusout", (function (e) { const t = e.target; "INPUT" !== t.tagName && "TEXTAREA" !== t.tagName || (t.hasAttribute("data-no-focus-classes") || (t.classList.remove("_form-focus"), t.parentElement.classList.remove("_form-focus")), t.hasAttribute("data-validate") && n.validateInput(t)) })), e.viewPass && document.addEventListener("click", (function (e) { let t = e.target; if (t.closest('[class*="__viewpass"]')) { let e = t.classList.contains("_viewpass-active") ? "password" : "text"; t.parentElement.querySelector("input").setAttribute("type", e), t.classList.toggle("_viewpass-active") } })), e.autoHeight) { const t = document.querySelectorAll("textarea[data-autoheight]"); if (t.length) { function a(e, t) { e.style.height = `${t}px` } t.forEach((e => { const t = e.hasAttribute("data-autoheight-min") ? Number(e.dataset.autoheightMin) : Number(e.offsetHeight), o = e.hasAttribute("data-autoheight-max") ? Number(e.dataset.autoheightMax) : 1 / 0; a(e, Math.min(t, o)), e.addEventListener("input", (() => { e.scrollHeight > t && (e.style.height = "auto", a(e, Math.min(Math.max(e.scrollHeight, t), o))) })) })) } } }({ viewPass: !1, autoHeight: !1 }), function () { const t = document.forms; if (t.length) for (const e of t) e.addEventListener("submit", (function (e) { a(e.target, e) })), e.addEventListener("reset", (function (e) { const t = e.target; n.formClean(t) })); async function a(e, t) { if (0 === (e.hasAttribute("data-no-validate") ? 0 : n.getErrors(e))) { if (e.hasAttribute("data-ajax")) { t.preventDefault(); const a = e.getAttribute("action") ? e.getAttribute("action").trim() : "#", s = e.getAttribute("method") ? e.getAttribute("method").trim() : "GET", r = new FormData(e); e.classList.add("_sending"); const n = await fetch(a, { method: s, body: r }); if (n.ok) { let t = await n.json(); e.classList.remove("_sending"), o(e, t) } else alert("Помилка"), e.classList.remove("_sending") } else e.hasAttribute("data-dev") && (t.preventDefault(), o(e)) } else if (t.preventDefault(), e.querySelector("._form-error") && e.hasAttribute("data-goto-error")) { const t = e.dataset.gotoError ? e.dataset.gotoError : "._form-error"; r(t, !0, 1e3) } } function o(t, a = "") { document.dispatchEvent(new CustomEvent("formSent", { detail: { form: t } })), setTimeout((() => { if (e.popup) { const a = t.dataset.popupMessage; a && e.popup.open(a) } }), 0), n.formClean(t), s(`[Форми]: ${"Форму відправлено!"}`) } }() })();


  

if (window.innerWidth < 767.98) {
    document.querySelectorAll('.item-marketing').forEach(item => {
        item.addEventListener('click', () => {
            item.classList.toggle('hovered');
        });
    });

    const withUs = document.querySelectorAll(".with-us__wrapper");
    withUs.forEach(el => {
        el.addEventListener("click", () => {
            el.classList.toggle("active");
            console.log("bi");
        });
    });

}
document.addEventListener('DOMContentLoaded', function() {
   
        const itemSlider = document.querySelectorAll(".swiper-slide");
        // Видаляємо клас за замовчуванням
        itemSlider.forEach(el => {
            el.classList.remove("swiper-slide-active");
        });

        itemSlider.forEach(el => {
            el.addEventListener("click", function() {
               el.classList.toggle("swiper-slide-active");
                
             
                const dark = document.body.classList.toggle("dark");
               

                if (dark) {
             
               el.classList.add("swiper-slide-active");

              
                } else {
                    el.classList.remove("swiper-slide-active");
                    const slides = document.querySelectorAll('.swiper-slide');
               
               
                }
            });

            let body = document.querySelector('body');
            let slides = document.querySelectorAll('.swiper-slide');
          
        
            
        });
   
    

   
});



